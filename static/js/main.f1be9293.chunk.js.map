{"version":3,"sources":["routes/home.jsx","routes/about.jsx","routes/game-home.jsx","logic/card.js","logic/noble.js","logic/data.js","logic/chip-pool.js","logic/table.js","logic/game.js","routes.js","routes/game.jsx","App.jsx","index.jsx"],"names":["Home","props","to","About","GameHome","useState","players","setPlayers","onClick","e","preventDefault","Card","card","this","level","gem","points","cost","compute_cost","diamond","sapphire","emerald","ruby","opal","newcost","discount","map","Noble","noble","cards","all","cardMapper","byLevel","filter","nobles","nobleMapper","startingChips","2","gold","3","4","default","ChipPool","playercount","chips","Table","pool","decks","1","initDecks","initCards","lvl","data","Array","flipcard","arr","Math","floor","random","length","c","push","i","indexOf","pop","console","log","Game","playerNames","p","array","j","temp","shuffleArray","table","init","routes","useParams","parseInt","keys","game","JSON","stringify","App","Routes","route","ThisRoute","path","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8jOAYeA,EATF,SAAAC,GACX,OACE,gCACE,uCACA,cAAC,IAAD,CAAMC,GAAG,SAAT,uBCKSC,EATD,SAAAF,GACZ,OACE,gCACE,wCACA,cAAC,IAAD,CAAMC,GAAG,IAAT,sB,QCmBSE,EAvBE,SAAAH,GAAU,IAAD,EACII,mBAAS,GADb,mBACnBC,EADmB,KACVC,EADU,KAYxB,OACE,gCACE,4CACA,wBAAQC,QARW,SAACC,GACtBA,EAAEC,iBACEJ,EAAU,GAAGC,EAAWD,EAAU,IAMpC,SAAoC,MACpC,wBAAQE,QAbW,SAACC,GACtBA,EAAEC,iBACEJ,EAAU,GAAGC,EAAWD,EAAU,IAWpC,SAAoC,MACpC,0CAAaA,KACb,cAAC,IAAD,CAAMJ,GAAI,SAAWI,EAArB,6B,sDCrBAK,E,WACJ,WAAYC,GAAO,oBACjBC,KAAKC,MAAQF,EAAKE,MAClBD,KAAKE,IAAMH,EAAKG,IAChBF,KAAKG,OAASJ,EAAKI,OACnBH,KAAKI,KAAOJ,KAAKK,aAAaN,EAAKK,M,gDAGrC,SAAaA,GACX,IAAKA,EAAM,MAAO,CAAEE,QAAS,EAAGC,SAAU,EAAGC,QAAS,EAAGC,KAAM,EAAGC,KAAM,GACxE,IAAIC,EAAU,GAMd,OALAA,EAAQL,QAAUF,EAAKE,QAAUF,EAAKE,QAAU,EAChDK,EAAQJ,SAAWH,EAAKG,SAAWH,EAAKG,SAAW,EACnDI,EAAQH,QAAUJ,EAAKI,QAAUJ,EAAKI,QAAU,EAChDG,EAAQF,KAAOL,EAAKK,KAAOL,EAAKK,KAAO,EACvCE,EAAQD,KAAON,EAAKM,KAAON,EAAKM,KAAO,EAChCC,I,2BAGT,SAAcC,GACZ,IAAID,EAAO,eAAQX,KAAKI,MACxB,IAAK,IAAIF,KAAOU,EACdD,EAAQT,GAAOF,KAAKI,KAAKF,GAAOU,EAASV,GACrCS,EAAQT,GAAO,IAAGS,EAAQT,GAAO,GAEvC,OAAOS,M,KAKJ,SAASE,EAAKd,GACnB,OAAO,IAAID,EAAKC,G,IC9BZe,EACJ,WAAYC,GAAQ,oBAClBf,KAAKI,KAAOW,EAAMX,MAMf,SAASS,EAAIE,GAClB,OAAO,IAAID,EAAMC,GCUJ,OACbC,MAAO,CAAEC,IAfX,WACE,OAAOD,EAAMH,IAAIK,IAcOC,QAX1B,SAAkBlB,GAChB,OAAOe,EACJI,QAAO,SAAArB,GAAI,OAAIA,EAAKE,OAASA,KAC7BY,IAAIK,KASPG,OAAQ,CAAEJ,IANZ,WACE,OAAOI,EAAOR,IAAIS,MCjBdC,EAAgB,CACpBC,EAAG,CAAElB,QAAS,EAAGC,SAAU,EAAGC,QAAS,EAAGC,KAAM,EAAGC,KAAM,EAAGe,KAAM,GAClEC,EAAG,CAAEpB,QAAS,EAAGC,SAAU,EAAGC,QAAS,EAAGC,KAAM,EAAGC,KAAM,EAAGe,KAAM,GAClEE,EAAG,CAAErB,QAAS,EAAGC,SAAU,EAAGC,QAAS,EAAGC,KAAM,EAAGC,KAAM,EAAGe,KAAM,GAClEG,QAAS,CAAEtB,QAAS,EAAGC,SAAU,EAAGC,QAAS,EAAGC,KAAM,EAAGC,KAAM,EAAGe,KAAM,IA6B3DI,E,WAzBb,WAAYC,GAAc,oBACxB9B,KAAK+B,MAAQR,EAAcO,IAAgBP,EAAcK,Q,4CAG3D,SAAS1B,GACP,OAAOF,KAAK+B,MAAM7B,K,yBAGpB,SAAYA,GACV,OAAOF,KAAK+B,MAAM7B,GAAO,I,6BAE3B,SAAgBA,GACd,OAAOF,KAAK+B,MAAM7B,IAAQ,I,sBAE5B,SAASA,GAEP,OADAF,KAAK+B,MAAM7B,IAAQ,EACZF,KAAK+B,MAAM7B,K,wBAGpB,SAAWA,GAET,OADAF,KAAK+B,MAAM7B,IAAQ,EACZF,KAAK+B,MAAM7B,O,KCtBhB8B,E,WACJ,WAAYvC,GAAU,oBACpBO,KAAKiC,KAAO,IAAIJ,EAASpC,GACzBO,KAAKkC,MAAQ,CAAEC,EAAG,GAAIX,EAAG,GAAIE,EAAG,IAChC1B,KAAKgB,MAAQ,CAAEmB,EAAG,GAAIX,EAAG,GAAIE,EAAG,I,wCAGlC,WAGE,OAFA1B,KAAKoC,YACLpC,KAAKqC,YACErC,O,uBAET,WACE,cAAgB,CAAC,EAAG,EAAG,GAAvB,eAA2B,CAAtB,IAAIsC,EAAG,KACVtC,KAAKkC,MAAMI,GAAOC,EAAKvB,MAAMG,QAAQmB,M,uBAGzC,WACE,cAAgB,CAAC,EAAG,EAAG,GAAvB,eAA2B,CAAtB,IAAsB,EAAlBA,EAAG,KAAe,cACXE,MAAM,IADK,IACzB,2BAAwB,SACtBxC,KAAKyC,SAASH,IAFS,kC,sBAO7B,SAASrC,GACP,IA9BYyC,EA8BR3C,GA9BQ2C,EA8BO1C,KAAKkC,MAAMjC,IA7BrB0C,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAgCxC,OAFA9C,KAAKkC,MAAMjC,GAASD,KAAKkC,MAAMjC,GAAOmB,QAAO,SAAA2B,GAAC,OAAIA,GAAKhD,KACvDC,KAAKgB,MAAMf,GAAO+C,KAAKjD,GAChBA,I,qBAGT,SAAQE,EAAOF,GACb,IAAIkD,EAAIjD,KAAKgB,MAAMf,GAAOiD,QAAQnD,GAGlC,OAFAC,KAAKgB,MAAMf,GAAOkD,IAAIF,GACtBjD,KAAKyC,SAASxC,GACPF,M,KAGXqD,QAAQC,IAAIxB,GACGG,Q,IClBAsB,E,WAfb,WAAYC,GAAc,oBACxBvD,KAAKP,QAAU,GADQ,oBAET8D,GAFS,IAEvB,2BAA2B,CAAC,IAAnBC,EAAkB,QACzBxD,KAAKP,QAAQuD,KAAKQ,IAHG,+BAV3B,SAAsBC,GACpB,IAAK,IAAIR,EAAIQ,EAAMX,OAAS,EAAGG,EAAI,EAAGA,IAAK,CACzC,IAAIS,EAAIf,KAAKC,MAAMD,KAAKE,UAAYI,EAAI,IACpCU,EAAOF,EAAMR,GACjBQ,EAAMR,GAAKQ,EAAMC,GACjBD,EAAMC,GAAKC,GAUXC,CAAa5D,KAAKP,SAClBO,KAAK6D,MAAQ,IAAI7B,EAAMhC,KAAKP,QAAQqD,Q,wCAEtC,WAGE,OAFAM,QAAQC,IAAIrD,KAAK6D,OACjB7D,KAAK6D,MAAMC,OACJ9D,S,KCbI+D,EAPF,CACX,iBCFoB,SAAA3E,GAAU,IACxBK,EAAYuE,cAAZvE,QACNA,EAAUwE,SAASxE,GAGnB,IADA,IAAI8D,EAAc,GAClB,kBAAkBf,MAAM/C,GAASyE,QAAjC,eAA0C,CAArC,IAAIjB,EAAC,KACRM,EAAYP,KAAK,WAAWC,EAAE,IAEhC,IAAIkB,EAAO,IAAIb,EAAKC,GAGpB,OAFAY,EAAKL,OAGH,gCACE,4CAAerE,EAAf,cACA,8BACG2E,KAAKC,UAAUF,EAAM,KAAM,KAE9B,cAAC,IAAD,CAAM9E,GAAG,SAAT,2BDdJ,SAAUE,EACV,SAAUD,EACV,IAAKH,GEeQmF,MApBf,WACE,IAAIC,EAAS,GACb,IAAK,IAAIC,KAAST,EAAQ,CACxB,IAAIU,EAAYV,EAAOS,GACvBD,EAAOvB,KACL,cAAC,IAAD,CAAmB0B,KAAMF,EAAzB,SACE,cAACC,EAAD,KADUD,IAMhB,OACE,cAAC,IAAD,CAAQG,SAAS,IAAjB,SAGE,cAAC,IAAD,UAASJ,OCffK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f1be9293.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst Home = props => {\n  return (\n    <div>\n      <h1>Home!</h1>\n      <Link to=\"/about\">About</Link>\n    </div>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst About = props => {\n  return (\n    <div>\n      <h1>About!</h1>\n      <Link to=\"/\">Home</Link>\n    </div>\n  )\n}\n\nexport default About\n","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst GameHome = props => {\n  let [players, setPlayers] = useState(1)\n\n  let incrementPlayers = (e) => {\n    e.preventDefault()\n    if (players < 4) setPlayers(players + 1)\n  }\n  let decrementPlayers = (e) => {\n    e.preventDefault()\n    if (players > 1) setPlayers(players - 1)\n  }\n\n  return (\n    <div>\n      <h1>Game Home!</h1>\n      <button onClick={decrementPlayers}>{\"<\"}</button>\n      <button onClick={incrementPlayers}>{\">\"}</button>\n      <p>Players: {players}</p>\n      <Link to={\"/game/\" + players}>Start Game!</Link>\n    </div>\n  )\n}\n\nexport default GameHome\n","class Card {\n  constructor(card) {\n    this.level = card.level\n    this.gem = card.gem\n    this.points = card.points\n    this.cost = this.compute_cost(card.cost)\n  }\n\n  compute_cost(cost) {\n    if (!cost) return { diamond: 0, sapphire: 0, emerald: 0, ruby: 0, opal: 0 }\n    let newcost = {}\n    newcost.diamond = cost.diamond ? cost.diamond : 0\n    newcost.sapphire = cost.sapphire ? cost.sapphire : 0\n    newcost.emerald = cost.emerald ? cost.emerald : 0\n    newcost.ruby = cost.ruby ? cost.ruby : 0\n    newcost.opal = cost.opal ? cost.opal : 0\n    return newcost\n  }\n\n  with_discount(discount) {\n    let newcost = { ...this.cost }\n    for (let gem in discount) {\n      newcost[gem] = this.cost[gem] - discount[gem]\n      if (newcost[gem] < 0) newcost[gem] = 0\n    }\n    return newcost\n  }\n}\n\nexport default Card\nexport function map (card) {\n  return new Card(card)\n}\n","\nclass Noble {\n  constructor(noble) {\n    this.cost = noble.cost\n  }\n\n}\n\nexport default Noble\nexport function map(noble) {\n  return new Noble(noble)\n}\n","import cards from \"./cards.json\"\nimport nobles from \"./nobles.json\"\n\nimport Card, {map as cardMapper} from \"./card.js\"\nimport Noble, {map as nobleMapper} from \"./noble.js\"\n\nfunction getCards() {\n  return cards.map(cardMapper)\n}\n\nfunction getLevel(level) {\n  return cards\n    .filter(card => card.level == level)\n    .map(cardMapper)\n}\n\nfunction getNobles() {\n  return nobles.map(nobleMapper)\n}\n\nexport default {\n  cards: { all: getCards, byLevel: getLevel },\n  nobles: { all: getNobles },\n}\n","const startingChips = {\n  2: { diamond: 4, sapphire: 4, emerald: 4, ruby: 4, opal: 4, gold: 5 },\n  3: { diamond: 5, sapphire: 5, emerald: 5, ruby: 5, opal: 5, gold: 5 },\n  4: { diamond: 7, sapphire: 7, emerald: 7, ruby: 7, opal: 7, gold: 5 },\n  default: { diamond: 1, sapphire: 1, emerald: 1, ruby: 1, opal: 1, gold: 1 }\n}\n\nclass ChipPool {\n  constructor(playercount) {\n    this.chips = startingChips[playercount] || startingChips.default\n  }\n\n  getChips(gem) {\n    return this.chips[gem]\n  }\n\n  canTakeChip(gem) {\n    return this.chips[gem] > 0\n  }\n  canTakeTwoChips(gem) {\n    return this.chips[gem] >= 4\n  }\n  takeChip(gem) {\n    this.chips[gem] -= 1\n    return this.chips[gem]\n  }\n\n  returnChip(gem) {\n    this.chips[gem] += 1\n    return this.chips[gem]\n  }\n}\n\nexport default ChipPool\n","import ChipPool from \"./chip-pool.js\"\nimport data from \"./data.js\"\n\nconst randArr = arr => {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nclass Table {\n  constructor(players) {\n    this.pool = new ChipPool(players)\n    this.decks = { 1: [], 2: [], 3: [] }\n    this.cards = { 1: [], 2: [], 3: [] }\n  }\n\n  init() {\n    this.initDecks()\n    this.initCards()\n    return this\n  }\n  initDecks() {\n    for (let lvl of [1, 2, 3]) {\n      this.decks[lvl] = data.cards.byLevel(lvl)\n    }\n  }\n  initCards() {\n    for (let lvl of [1, 2, 3]) {\n      for (let c of Array(4)) {\n        this.flipcard(lvl)\n      }\n    }\n  }\n\n  flipcard(level) {\n    let card = randArr(this.decks[level])\n    this.decks[level] = this.decks[level].filter(c => c != card)\n    this.cards[level].push(card)\n    return card\n  }\n\n  buycard(level, card) {\n    let i = this.cards[level].indexOf(card)\n    this.cards[level].pop(i)\n    this.flipcard(level)\n    return card\n  }\n}\nconsole.log(ChipPool)\nexport default Table\n","import data from \"./data.js\"\nimport Player from \"./player.js\"\nimport Table from \"./table.js\"\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1))\n    let temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n}\n\nclass Game {\n  constructor(playerNames) {\n    this.players = []\n    for (let p of playerNames) {\n      this.players.push(p)\n    }\n    shuffleArray(this.players)\n    this.table = new Table(this.players.length)\n  }\n  init() {\n    console.log(this.table)\n    this.table.init()\n    return this\n  }\n}\n\nexport default Game\n","import Home from \"./routes/home\"\nimport About from \"./routes/about\"\nimport GameHome from \"./routes/game-home\"\nimport Game from \"./routes/game\"\n\nlet routes = {\n  \"/game/:players\": Game,\n  \"/game/\": GameHome,\n  \"/about\": About,\n  \"/\": Home,\n}\n\nexport default routes\n","import React from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\nimport Game from \"../logic/game\"\n\nconst GameComponent = props => {\n  let { players } = useParams()\n  players = parseInt(players)\n\n  let playerNames = []\n  for (let i of [...Array(players).keys()]) {\n    playerNames.push(\"Player \"+(i+1))\n  }\n  let game = new Game(playerNames)\n  game.init()\n\n  return (\n    <div>\n      <h1>Game with {players} players</h1>\n      <pre>\n        {JSON.stringify(game, null, 2)}\n      </pre>\n      <Link to=\"/game/\">Game Home</Link>\n    </div>\n  )\n}\n\nexport default GameComponent\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport routes from \"./routes\"\n\nfunction App() {\n  let Routes = []\n  for (let route in routes) {\n    let ThisRoute = routes[route]\n    Routes.push(\n      <Route key={route} path={route}>\n        <ThisRoute />\n      </Route>\n    )\n  }\n\n  return (\n    <Router basename=\"/\">\n      {/* <Nav /> */}\n\n      <Switch>{Routes}</Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}